server:
  port: 8084

spring:
  config:
    import: optional:file:.env[.properties]

  application:
    name: course-service

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://${DB_HOST:consort-postgres}:${DB_PORT:5432}/${POSTGRES_DB:consort_group}}
    username: ${DB_USERNAME:${POSTGRES_USER:consort}}
    password: ${DB_PASSWORD:${POSTGRES_PASSWORD:consort}}
    hikari:
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      host: ${REDIS_COURSE_HOST:consort-redis-course-service}
      port: ${REDIS_COURSE_PORT:6379}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
        shutdown-timeout: 100ms

  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
      enabled: true

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:"consort-kafka:9092"}
    producer:
      acks: all
      retries: 10
    properties:
      metadata.max.age.ms: 30000

logging:
  level:
    root: INFO
    org.springframework: DEBUG
    org.springframework.web: DEBUG
    org.springframework.http.converter.json: TRACE

storage:
  base-dir: media/uploads
  file-types:
    video:
      sub-dir: videos
      max-file-size: 1000MB
      allowed-mime-types:
        - video/mp4
        - video/mpeg
      allowed-extensions:
        - mp4
        - mpeg
    image:
      sub-dir: images
      max-file-size: 100MB
      allowed-mime-types:
        - image/jpeg
        - image/png
      allowed-extensions:
        - jpg
        - jpeg
        - png
    pdf:
      sub-dir: pdfs
      max-file-size: 20MB
      allowed-mime-types:
        - application/pdf
      allowed-extensions:
        - pdf

user:
  service:
    url: ${USER_SERVICE_URL:http://consort-user-service:8081}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://consort-eureka-service:8762/eureka/}
  instance:
    prefer-ip-address: true
    instance-id: ${HOSTNAME}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized
      show-components: when_authorized
  health:
    redis:
      enabled: true
    db:
      enabled: true
    defaults:
      enabled: true
    diskspace:
      enabled: true
    ping:
      enabled: true

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    docExpansion: full
    defaultModelsExpandDepth: 1
    defaultModelExpandDepth: 3
    defaultModelRendering: schema
    operationsSorter: method
    tagsSorter: alpha
  model-converters:
    pageable-converter:
      enabled: true
